* CODESCROLL 동저 시험 
** 주의사항 
 - [ ] 스크립트 폴더별로 작성 주의 
 - [ ] 시작전 최신 파일 체크아웃 (.cpp, .h)
** 구현 필요. 
*** TODO nth 
 C 로 구현해서 성능 향상 필요. 
*** TODO ew intelligence 관련 
** shortcut 
*** 링크 플래그 
*.csp 파일에 대하여 수행 
#+BEGIN_SRC sql
update Module set linkFlag='-Lc:/ts/ -ltinyscheme' ; 
#+END_SRC


#+BEGIN_SRC sql
sqlite3 xxx.csp update Module set linkFlag='-Lc:/ts/ -ltinyscheme' ; 
#+END_SRC

*** 자주 사용하는 코드 

#+BEGIN_SRC cpp

if(testsc_ivalue("testsc") > 0) return testsc_ivalue("") ; 

#+END_SRC
** stub
*** get_admission
#+BEGIN_SRC cpp
admission_t  os_data::get_admission()
{
	admission_t cs_returnValue = {0, };
	cs_returnValue.max_ntn_track = 500 ; 
	cs_returnValue.ntn_track_threshold_percent = 80 ;
	cs_returnValue.max_tx_ntn_track = 500 ;
	cs_returnValue.tx_ntn_track_threshold_percent = 80 ; 

	return cs_returnValue;
}
#+END_SRC
*** read_channel
#+BEGIN_SRC cpp
char* testsc_admin_get( int i ) ;
void testsc_debug(const char*format ...) ;

int  read_channel(const char * arg0, char * arg1, unsigned int arg2)
{
	static int count = 1 ;
	if( testsc_ivalue("testsc") > 0 ){
		char *it = testsc_admin_get(count++) ;
		new_assignment_t* it2 = (new_assignment_t*) it ;

		if(0 == it ) return 0 ;
		testsc_debug("%d:%d:%d %s:%d", it2->tactical, it2->assignment_kind, arg2, __FILE__, __LINE__ ) ;
		memcpy(arg1, it, arg2) ;
		//new_assignment_t* it2 = (new_assignment_t*) it ;

		testsc_debug("%d:%d:%d %s:%d", it2->tactical, it2->assignment_kind, arg2, __FILE__, __LINE__ ) ;
		return arg2 ;
	}
	return 0;
}

#+END_SRC
*** message_admin
#+BEGIN_SRC cpp

if(testsc_ivalue("testsc")>0) return testsc_ivalue("mas") ; 

char* testsc_admin_get( int i ) ;

if( testsc_ivalue("testsc") > 0 ){return testsc_admin_get(arg0) ;}

#+END_SRC
*** ntdb

#+BEGIN_SRC cpp
  static int id = 1 ; 

  if(testsc_ivalue("testsc") > 0 ){
    if( testsc_ivalue("con") > 0 ){
      return testsc_track_get(testsc_ivalue("con") ) ;
    }
    return testsc_track_get(id++) ; 
  }
  return 0 ; 
#+END_SRC

*** mmsg_buff
single()  구현 필요. 



** testcase 수정 방법 
다음과 같은 주석이 있으면 사용자 코드가 삭제가 아니되는 것으로 보임 
#+BEGIN_SRC cpp

/*
	TODO : Constructor Code Here
	Class name : vector<uintptr_t, allocator<uintptr_t> > 
	Object name : networks
*/

/*	FIXME : Abnormal code	*/
	vector<uintptr_t, allocator<uintptr_t> > networks=vector<uintptr_t, allocator<uintptr_t> >();



for(int i = 0 ; i < 10 ; i ++){
  networks.push_back(i) ; 
}
	/* build_message_tag::output_tag_transfers(const vector<unsigned long, allocator<unsigned long> > &) */
	object_build_message_tag.output_tag_transfers(networks);

#+END_SRC
** 진행방법 

 1. 파일 체크아웃
 2. 타임아웃 설정
 3. 일괄 테스트 수행
 4. 셀프스텁 기록 필요.
 5. 셀프서텁 사용 후 원복
 6. 파일 완료 후에는 커밋 필수 



** 진척률 [6/91]

*** TODO DP_L11EventHandler
*** TODO LINK11_DSF_MANAGER
*** TODO SQLite3Interface
*** TODO build_message_aircraft_control
*** TODO build_message_aircraft_status
*** TODO build_message_cdo
*** TODO build_message_command
*** TODO build_message_difference_report
*** TODO build_message_emitter_eval
*** TODO build_message_ew_coord
*** TODO build_message_iff_sif
*** TODO build_message_link_pointer
*** TODO build_message_opnote
*** TODO build_message_ownship
*** TODO build_message_pairing_association
*** TODO build_message_reception_quality
*** TODO build_message_special_code
*** TODO build_message_supporting_information
*** DONE build_message_tag
    CLOSED: [2016-04-02 Sat 18:43]
    - State "STARTED"    from              [2016-04-02 Sat 12:13]
CASE_RETURN_WITH_VALUE 변경 

 - [ ] 일괄 실행 
*** DONE build_message_track                                       :SELFSTUB:
 스크립트 폴더 따로 작성하지 아니하였음. 
**** get_amplifying_message_period
const track_selection_t * build_message_track::find_track_transmission_characteristic(network_track_data_t * arg0)

**** output_tracks

- stubs 
#+BEGIN_SRC cpp

#+END_SRC

*** TODO build_message_training
*** TODO build_message_update_request
*** TODO build_message_weapon_engagement
*** TODO dlp_unit
*** TODO dlptime
*** TODO dts_controller
*** TODO dts_serial
*** TODO ew_intelligence_types
*** TODO ffx_unit
*** TODO general_input
*** TODO general_library
*** TODO general_output
*** TODO gettimeofday
*** TODO intf_vme
*** DONE lifecycle_controller
    CLOSED: [2016-03-29 Tue 14:27]
*** STARTED link11_filter

**** self strub
is_track_filter_exception 

*** TODO looptest
*** TODO mmsg_buff
*** TODO network_rx
*** TODO network_track_data_base
*** TODO network_track_data_bash_hash
*** TODO network_tx
*** TODO ntds_intf
*** TODO ntn_controller
*** TODO os_data
*** TODO parameter_adapter
*** TODO periodic_controller
*** TODO pool
*** TODO process_message
*** TODO process_message_m10
*** TODO process_message_m11b
*** TODO process_message_m11c
*** TODO process_message_m11d
*** TODO process_message_m11m
*** TODO process_message_m12_0
*** TODO process_message_m12_30
*** TODO process_message_m12_31
*** TODO process_message_m13
*** TODO process_message_m14
*** TODO process_message_m15
*** TODO process_message_m1_rp0
*** TODO process_message_m1_rp1
*** TODO process_message_m2
*** TODO process_message_m3
*** DONE process_message_m4ab
    CLOSED: [2016-04-02 Sat 17:52]

**** self stub 
#+BEGIN_INFO 
bool process_message_m4ab::is_depth_valid(mmsg_buff *m) ;
bool process_message_m4ab::is_gmt_valid(mmsg_buff *m)
#+END_INFO

*** STARTED process_message_m4c
    - State "STARTED"    from "TODO"       [2016-04-02 Sat 18:35]
 - [ ] 일괄 실행 
*** TODO process_message_m4d
*** DONE process_message_m5                                    :QUESTIONMARK:
    CLOSED: [2016-03-28 Mon 23:53]
 스크립트 폴더 pm5

? 가 생기는 원인 확인 필요. 
*** DONE process_message_m6a
    CLOSED: [2016-03-29 Tue 11:43]
*** STARTED process_message_m6b
**** existing_track 
stup : get_last_created_network
*** TODO process_message_m6c
*** TODO process_message_m6d
*** TODO process_message_m9a
*** TODO process_message_m9b
*** TODO process_message_m9c
*** TODO process_message_m9d
*** TODO process_message_m9e
*** TODO process_message_m9f
*** TODO process_message_m9g
*** TODO pu_data
*** TODO received_frame_filter
*** TODO remote_control
*** TODO rx_monitor
*** TODO simulated_track
*** TODO start_dlps
*** TODO status_checker
*** TODO track_controller
*** STARTED track_input
    - State "STARTED"    from "TODO"       [2016-04-02 Sat 12:44]

 - [X] 최초 실행  
*** TODO track_output
*** TODO usr_channel
*** TODO utility
